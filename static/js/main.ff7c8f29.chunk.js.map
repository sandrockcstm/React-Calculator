{"version":3,"sources":["Components/calculator.jsx","Components/formula.jsx","Components/display.jsx","Components/buttons.jsx","App.js","serviceWorker.js","index.js"],"names":["isOperator","endsWithOperator","endsWithNegativeSign","Calculator","props","state","currentVal","prevVal","formula","currentSign","lastClicked","maxDigitWarning","bind","handleOperators","handleEvaluate","initialize","handleDecimal","handleNumbers","this","setState","setTimeout","includes","expression","test","slice","replace","answer","Math","round","eval","toString","evaluated","e","value","target","length","match","className","currentValue","decimal","evaluate","numbers","operators","React","Component","Formula","id","Display","Buttons","onClick","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff7c8f29.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Formula from \"./formula\";\r\nimport Display from \"./display\";\r\nimport Buttons from \"./buttons\";\r\n\r\nconst isOperator = /[x/+‑]/,\r\n  endsWithOperator = /[x+‑/]$/,\r\n  endsWithNegativeSign = /[x/+]‑$/;\r\n\r\nexport default class Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentVal: \"0\",\r\n      prevVal: \"0\",\r\n      formula: \"\",\r\n      currentSign: \"pos\",\r\n      lastClicked: \"\"\r\n    };\r\n    this.maxDigitWarning = this.maxDigitWarning.bind(this);\r\n    this.handleOperators = this.handleOperators.bind(this);\r\n    this.handleEvaluate = this.handleEvaluate.bind(this);\r\n    this.initialize = this.initialize.bind(this);\r\n    this.handleDecimal = this.handleDecimal.bind(this);\r\n    this.handleNumbers = this.handleNumbers.bind(this);\r\n  }\r\n\r\n  maxDigitWarning() {\r\n    this.setState({\r\n      currentVal: \"Digit Limit Met\",\r\n      prevVal: this.state.currentVal\r\n    });\r\n    setTimeout(() => this.setState({ currentVal: this.state.prevVal }), 1000);\r\n  }\r\n\r\n  handleEvaluate() {\r\n    if (!this.state.currentVal.includes(\"Limit\")) {\r\n      let expression = this.state.formula;\r\n      while (endsWithOperator.test(expression)) {\r\n        expression = expression.slice(0, -1);\r\n      }\r\n      expression = expression.replace(/x/g, \"*\").replace(/‑/g, \"-\");\r\n      let answer = Math.round(1000000000000 * eval(expression)) / 1000000000000;\r\n      this.setState({\r\n        currentVal: answer.toString(),\r\n        formula:\r\n          expression.replace(/\\*/g, \"⋅\").replace(/-/g, \"‑\") + \"=\" + answer,\r\n        prevVal: answer,\r\n        evaluated: true\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOperators(e) {\r\n    if (!this.state.currentVal.includes(\"Limit\")) {\r\n      const value = e.target.value;\r\n      const { formula, prevVal, evaluated } = this.state;\r\n      this.setState({ currentVal: value, evaluated: false });\r\n      if (evaluated) {\r\n        this.setState({ formula: prevVal + value });\r\n      } else if (!endsWithOperator.test(formula)) {\r\n        this.setState({\r\n          prevVal: formula,\r\n          formula: formula + value\r\n        });\r\n      } else if (!endsWithNegativeSign.test(formula)) {\r\n        this.setState({\r\n          formula:\r\n            (endsWithNegativeSign.test(formula + value) ? formula : prevVal) +\r\n            value\r\n        });\r\n      } else if (value !== \"‑\") {\r\n        this.setState({\r\n          formula: prevVal + value\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleNumbers(e) {\r\n    if (!this.state.currentVal.includes(\"Limit\")) {\r\n      const { currentVal, formula, evaluated } = this.state;\r\n      const value = e.target.value;\r\n      this.setState({ evaluated: false });\r\n      if (currentVal.length > 21) {\r\n        this.maxDigitWarning();\r\n      } else if (evaluated) {\r\n        this.setState({\r\n          currentVal: value,\r\n          formula: value !== \"0\" ? value : \"\"\r\n        });\r\n      } else {\r\n        this.setState({\r\n          currentVal:\r\n            currentVal === \"0\" || isOperator.test(currentVal)\r\n              ? value\r\n              : currentVal + value,\r\n          formula:\r\n            currentVal === \"0\" && value === \"0\"\r\n              ? formula\r\n              : /([^.0-9]0)$/.test(formula)\r\n              ? formula.slice(0, -1) + value\r\n              : formula + value\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDecimal() {\r\n    if (this.state.evaluated === true) {\r\n      this.setState({\r\n        currentVal: \"0.\",\r\n        formula: \"0.\",\r\n        evaluated: false\r\n      });\r\n    } else if (\r\n      !this.state.currentVal.includes(\".\") &&\r\n      !this.state.currentVal.includes(\"Limit\")\r\n    ) {\r\n      this.setState({ evaluated: false });\r\n      if (this.state.currentVal.length > 21) {\r\n        this.maxDigitWarning();\r\n      } else if (\r\n        endsWithOperator.test(this.state.formula) ||\r\n        (this.state.currentVal === \"0\" && this.state.formula === \"\")\r\n      ) {\r\n        this.setState({\r\n          currentVal: \"0.\",\r\n          formula: this.state.formula + \"0.\"\r\n        });\r\n      } else {\r\n        this.setState({\r\n          currentVal: this.state.formula.match(/(-?\\d+\\.?\\d*)$/)[0] + \".\",\r\n          formula: this.state.formula + \".\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  initialize() {\r\n    this.setState({\r\n      currentVal: \"0\",\r\n      prevVal: \"0\",\r\n      formula: \"\",\r\n      currentSign: \"pos\",\r\n      lastClicked: \"\",\r\n      evaluated: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"col-md-6\" />\r\n        <div className=\"container col-md-3\">\r\n          <div className=\"row\">\r\n            <Formula formula={this.state.formula.replace(/x/g, \"⋅\")} />\r\n          </div>\r\n          <div className=\"row\">\r\n            <Display currentValue={this.state.currentVal} />\r\n          </div>\r\n          <Buttons\r\n            decimal={this.handleDecimal}\r\n            evaluate={this.handleEvaluate}\r\n            initialize={this.initialize}\r\n            numbers={this.handleNumbers}\r\n            operators={this.handleOperators}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Formula extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"formula\" className=\"container-fluid\">\r\n        {this.props.formula}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Display extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"display\" className=\"container-fluid\" id=\"display\">\r\n        {this.props.currentValue}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Buttons extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <button\r\n            id=\"clear\"\r\n            className=\"col-9 btn btn-danger\"\r\n            onClick={this.props.initialize}\r\n            value=\"AC\"\r\n          >\r\n            AC\r\n          </button>\r\n          <button\r\n            id=\"divide\"\r\n            className=\"col-3 btn btn-primary\"\r\n            onClick={this.props.operators}\r\n            value=\"/\"\r\n          >\r\n            /\r\n          </button>\r\n        </div>\r\n        <div className=\"row\">\r\n          <button\r\n            id=\"seven\"\r\n            className=\"col-3 btn btn-secondary\"\r\n            onClick={this.props.numbers}\r\n            value=\"7\"\r\n          >\r\n            7\r\n          </button>\r\n          <button\r\n            id=\"eight\"\r\n            className=\"col-3 btn btn-secondary\"\r\n            onClick={this.props.numbers}\r\n            value=\"8\"\r\n          >\r\n            8\r\n          </button>\r\n          <button\r\n            id=\"nine\"\r\n            className=\"col-3 btn btn-secondary\"\r\n            onClick={this.props.numbers}\r\n            value=\"9\"\r\n          >\r\n            9\r\n          </button>\r\n          <button\r\n            id=\"multiply\"\r\n            className=\"col-3 btn btn-primary\"\r\n            onClick={this.props.operators}\r\n            value=\"x\"\r\n          >\r\n            x\r\n          </button>\r\n        </div>\r\n        <div className=\"row\">\r\n          <button\r\n            id=\"four\"\r\n            className=\"col-3 btn btn-secondary\"\r\n            onClick={this.props.numbers}\r\n            value=\"4\"\r\n          >\r\n            4\r\n          </button>\r\n          <button\r\n            id=\"five\"\r\n            className=\"col-3 btn btn-secondary\"\r\n            onClick={this.props.numbers}\r\n            value=\"5\"\r\n          >\r\n            5\r\n          </button>\r\n          <button\r\n            id=\"six\"\r\n            className=\"col-3 btn btn-secondary\"\r\n            onClick={this.props.numbers}\r\n            value=\"6\"\r\n          >\r\n            6\r\n          </button>\r\n          <button\r\n            id=\"subtract\"\r\n            className=\"col-3 btn btn-primary\"\r\n            onClick={this.props.operators}\r\n            value=\"‑\"\r\n          >\r\n            -\r\n          </button>\r\n        </div>\r\n        <div className=\"row\">\r\n          <button\r\n            id=\"one\"\r\n            className=\"col-3 btn btn-secondary\"\r\n            onClick={this.props.numbers}\r\n            value=\"1\"\r\n          >\r\n            1\r\n          </button>\r\n          <button\r\n            id=\"two\"\r\n            className=\"col-3 btn btn-secondary\"\r\n            onClick={this.props.numbers}\r\n            value=\"2\"\r\n          >\r\n            2\r\n          </button>\r\n          <button\r\n            id=\"three\"\r\n            className=\"col-3 btn btn-secondary\"\r\n            onClick={this.props.numbers}\r\n            value=\"3\"\r\n          >\r\n            3\r\n          </button>\r\n          <button\r\n            id=\"add\"\r\n            className=\"col-3 btn btn-primary\"\r\n            onClick={this.props.operators}\r\n            value=\"+\"\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n        <div className=\"row\">\r\n          <button\r\n            className=\"col-6 btn btn-secondary\"\r\n            id=\"zero\"\r\n            onClick={this.props.numbers}\r\n            value=\"0\"\r\n          >\r\n            0\r\n          </button>\r\n          <button\r\n            id=\"decimal\"\r\n            className=\"col-3 btn btn-secondary\"\r\n            onClick={this.props.decimal}\r\n            value=\".\"\r\n          >\r\n            .\r\n          </button>\r\n          <button\r\n            id=\"equals\"\r\n            className=\"col-3 btn btn-primary\"\r\n            onClick={this.props.evaluate}\r\n            value=\"=\"\r\n          >\r\n            =\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Calculator from \"./Components/calculator\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return <Calculator />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}